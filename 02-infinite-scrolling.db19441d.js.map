{"mappings":"gkBAeA,MAAMA,EAAMC,GAAaC,SAASC,cAAcF,GAG1CG,EAAaJ,EAAG,gBAChBK,EAAcL,EAAG,uBACjBM,EAAUN,EAAG,YAEnB,IAAIO,EACAC,EACAC,EACAC,EAeJ,SAASC,KACP,EAAAC,EAAAC,aAAYR,EAAYS,MAAOP,GAC5BQ,MAAKC,KAOV,UAAsBC,KAACA,EAAIC,UAAEA,IAC3BT,EAAcS,EAEd,MAAMC,EAAUF,EAAKG,KAAI,EAACC,aAACA,EAAYC,cAAEA,EAAaC,KAAEA,EAAIC,MAAEA,EAAKC,MAAEA,EAAKC,SAAEA,EAAQC,UAAEA,KAAe,uEAElEL,qCAAiDD,WAAsBE,uKAIzEC,kIAIAC,qIAIAC,sIAIAC,mDAKhCC,KAAK,IAENtB,EAAQuB,mBAAmB,YAAaV,GAEhB,iBAAbT,GACTA,EAASoB,UAGXpB,EAAW,IAAIqB,EAAAC,GAAJ,CAAmB,oBAE9BxB,GAAmBS,EAAKgB,OAEA,IAApBzB,EACFuB,EAAAG,GAASC,OAAOC,QAAQ,4EACf5B,EAAkB,GAAoB,IAAfD,EAChCwB,EAAAG,GAASC,OAAOE,QAAQ,oBAAoB5B,aACnCD,EAAkB,GAAKA,IAAoBC,GACpDsB,EAAAG,GAASC,OAAOG,KAAK,8DAGvB,GAAI/B,EAAa,EAAG,CAClB,MAAQgC,OAAQC,GAAetC,SAC9BC,cAAc,2BAA2BsC,wBAE1CC,OAAOC,SAAS,CACdC,IAAkB,EAAbJ,EACLK,SAAU,WAIVpC,IAAgBD,EAClBkC,OAAOI,oBAAoB,SAAUC,EAAmB,CAACC,SAAS,IAElEN,OAAOO,iBAAiB,SAAUF,EAAmB,CAACC,SAAS,IAjE7DE,CAAalC,MAEdmC,OAAMC,GAASC,QAAQC,IAAIF,KAoEhC,SAASL,IACP,MAAMQ,UAACA,EAASC,aAAEA,EAAYC,aAAEA,GAAgBvD,SAASwD,gBAErDD,EAAeF,GAAaC,EAAe,IAO/CjD,GAAc,EACdI,KAhGFP,EAAW6C,iBAAiB,UAG5B,SAAmBU,GACjBA,EAAEC,iBACFrD,EAAa,EACbC,EAAkB,EAClBG,IACAL,EAAQuD,UAAY","sources":["src/js/02-infinite-scrolling.js"],"sourcesContent":["// Import of styles\nimport '../sass/02-main.scss';\n\n// Import the function that executes the query to the server for the searched images\nimport { fetchImages } from './fetchImages';\n\n// Import of Notiflix library\nimport Notiflix from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\n// Import of simpleLightbox library\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\n// Optimizing function (shortening the record) for searching for elements on the page\nconst qs = (selector) => document.querySelector(selector);\n\n// Search for input and output elements\nconst searchForm = qs(\".search-form\");\nconst searchInput = qs(\".search-form__input\");\nconst gallery = qs(\".gallery\");\n\nlet pageNumber;\nlet displayedImages;\nlet totalOfHits;\nlet lightbox;\n\n// Call the new search function after submitting the form\nsearchForm.addEventListener(\"submit\", newSearch);\n\n// Function finding new query results taking into account the value given in the input field\nfunction newSearch(e) {\n  e.preventDefault();\n  pageNumber = 1;\n  displayedImages = 0;\n  searchingImages();\n  gallery.innerHTML = \"\";\n}\n\n// Definition of the image search function contained in the backend\nfunction searchingImages() {\n  fetchImages(searchInput.value, pageNumber)\n    .then(images => {\n      renderImages(images);\n    })\n    .catch(error => console.log(error));\n}\n\n// Definition of the images rendering function based on the data taken from the backend\nfunction renderImages({hits, totalHits}) {\n  totalOfHits = totalHits;\n\n  const markups = hits.map(({webformatURL, largeImageURL, tags, likes, views, comments, downloads}) => `\n  <div class=\"gallery__item\">\n    <a class=\"gallery__link\" href=\"${largeImageURL}\"><img class=\"gallery__img\" src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" /></a>\n    <div class=\"gallery__info\">\n      <p class=\"info__item\">\n        <b class=\"info__label\">Likes</b>\n        <span class=\"info__data\">${likes}</span>\n      </p>\n      <p class=\"info__item\">\n        <b class=\"info__label\">Views</b>\n        <span class=\"info__data\">${views}</span>\n      </p>\n      <p class=\"info__item\">\n        <b class=\"info__label\">Comments</b>\n        <span class=\"info__data\">${comments}</span>\n      </p>\n      <p class=\"info__item\">\n        <b class=\"info__label\">Downloads</b>\n        <span class=\"info__data\">${downloads}</span>\n      </p>\n    </div>\n  </div>\n  `)\n  .join(\"\");\n\n  gallery.insertAdjacentHTML(\"beforeend\", markups);\n\n  if (typeof lightbox === \"object\") {\n    lightbox.destroy();\n  }\n\n  lightbox = new SimpleLightbox(\".gallery__item a\");\n\n  displayedImages += hits.length;\n\n  if (displayedImages === 0) {\n    Notiflix.Notify.failure(\"Sorry, there are no images matching your search query. Please try again.\");\n  } else if (displayedImages > 0 && pageNumber === 1) {\n    Notiflix.Notify.success(`Hooray! We found ${totalOfHits} images.`);\n  } else if (displayedImages > 0 && displayedImages === totalOfHits) {\n    Notiflix.Notify.info(\"We're sorry, but you've reached the end of search results.\");\n  }\n\n  if (pageNumber > 1) {\n    const { height: cardHeight } = document\n    .querySelector('.gallery .gallery__item').getBoundingClientRect();\n  \n    window.scrollBy({\n      top: cardHeight * 2,\n      behavior: 'smooth',\n    });\n  }\n\n  if (totalOfHits === displayedImages) {\n    window.removeEventListener('scroll', infiniteScrolling, {passive: true});\n  } else {\n    window.addEventListener('scroll', infiniteScrolling, {passive: true});\n  }\n}\n\n// Function definition for infinite scrolling of images while scrolling the page\nfunction infiniteScrolling() {\n  const {scrollTop, scrollHeight, clientHeight} = document.documentElement;\n\n  if (clientHeight + scrollTop >= scrollHeight - 5) {\n    loadMoreImg();\n  }\n}\n\n// Definition of the function for loading more new images\nfunction loadMoreImg() {\n  pageNumber += 1;\n  searchingImages();\n}"],"names":["$3ce39ae5cc255ae1$var$qs","selector","document","querySelector","$3ce39ae5cc255ae1$var$searchForm","$3ce39ae5cc255ae1$var$searchInput","$3ce39ae5cc255ae1$var$gallery","$3ce39ae5cc255ae1$var$pageNumber","$3ce39ae5cc255ae1$var$displayedImages","$3ce39ae5cc255ae1$var$totalOfHits","$3ce39ae5cc255ae1$var$lightbox","$3ce39ae5cc255ae1$var$searchingImages","$ak5AJ","fetchImages","value","then","images","hits","totalHits","markups","map","webformatURL","largeImageURL","tags","likes","views","comments","downloads","join","insertAdjacentHTML","destroy","$parcel$interopDefault","$fZKcF","length","$eWCmQ","Notify","failure","success","info","height","cardHeight","getBoundingClientRect","window","scrollBy","top","behavior","removeEventListener","$3ce39ae5cc255ae1$var$infiniteScrolling","passive","addEventListener","$3ce39ae5cc255ae1$var$renderImages","catch","error","console","log","scrollTop","scrollHeight","clientHeight","documentElement","e","preventDefault","innerHTML"],"version":3,"file":"02-infinite-scrolling.db19441d.js.map"}