{"mappings":"qiBAuBIA,EACAC,EACAC,EACAC,E,uCAXEC,EAAK,SAACC,G,OAAaC,SAASC,cAAcF,IAG1CG,EAAaJ,EAAG,gBAChBK,EAAcL,EAAG,uBACjBM,EAAiBN,EAAG,cACpBO,EAAUP,EAAG,YA8BnB,SAASQ,KACP,EAAAC,EAAAC,aAAYL,EAAYM,MAAOf,GAC5BgB,MAAK,SAAAC,IAOV,SAAsBC,G,IAACC,EAADD,EAACC,KAAMC,EAAPF,EAAOE,UAC3BlB,EAAckB,EAEd,IAAMC,EAAUF,EAAKG,KAAI,SAAAC,G,IAAEC,EAAYD,EAAZC,aAAcC,EAAaF,EAAbE,cAAeC,EAAIH,EAAJG,KAAMC,EAAKJ,EAALI,MAAOC,EAAKL,EAALK,MAAOC,EAAQN,EAARM,SAAUC,EAASP,EAATO,U,MAAe,uEAEjBC,OAAjDN,EAAc,qCAAyDM,OAAtBP,EAAa,WAIhEO,OAJyEL,EAAK,uKAQ9EK,OAJAJ,EAAM,kIAQNI,OAJAH,EAAM,qIAQNG,OAJAF,EAAS,sIAICE,OAAVD,EAAU,oDAK1CE,KAAK,IAENrB,EAAQsB,mBAAmB,YAAaZ,GAEhB,iBAAblB,GACTA,EAAS+B,UAGX/B,EAAW,IAAIgC,EAAAC,GAAJ,CAAmB,oBAE9BnC,GAAmBkB,EAAKkB,YAyBtB3B,EAAe4B,MAAMC,QADnBrC,IAAgBD,EACa,OAEA,SAxBT,IAApBA,EACFkC,EAAAK,GAASC,OAAOC,QAAQ,4EACfzC,EAAkB,GAAKA,IAAoBC,EACpDiC,EAAAK,GAASC,OAAOE,KAAK,8DACZ1C,EAAkB,GAAoB,IAAfD,GAChCmC,EAAAK,GAASC,OAAOG,QAAQ,oBAAgCb,OAAZ7B,EAAY,aAG1D,GAAIF,EAAa,EAAG,CAClB,IAAQ6C,EAAuBvC,SAC9BC,cAAc,2BAA2BuC,wBADlCC,OAGRC,OAAOC,SAAS,CACdC,IAAkB,EAAbL,EACLM,SAAU,YA3DVC,CAAanC,MAEdoC,OAAM,SAAAC,G,OAASC,QAAQC,IAAIF,MA3BhC9C,EAAWiD,iBAAiB,UAM5B,SAAmBC,GACjBA,EAAEC,iBACFjD,EAAe4B,MAAMC,QAAU,OAC/BvC,EAAa,EACbC,EAAkB,EAClBW,IACAD,EAAQiD,UAAY,MATtBlD,EAAe+C,iBAAiB,SAahC,WACEzD,GAAc,EACdY,O","sources":["src/js/01-load-more.js"],"sourcesContent":["// Import of styles\nimport '../sass/01-main.scss';\n\n// Import the function that executes the query to the server for the searched images\nimport { fetchImages } from './fetchImages';\n\n// Import of Notiflix library\nimport Notiflix from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\n// Import of simpleLightbox library\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\n// Optimizing function (shortening the record) for searching for elements on the page\nconst qs = (selector) => document.querySelector(selector);\n\n// Search for input and output elements\nconst searchForm = qs(\".search-form\");\nconst searchInput = qs(\".search-form__input\");\nconst loadMoreImgBtn = qs(\".load-more\");\nconst gallery = qs(\".gallery\");\n\nlet pageNumber;\nlet displayedImages;\nlet totalOfHits;\nlet lightbox;\n\n// Call the new search function after submitting the form\nsearchForm.addEventListener(\"submit\", newSearch);\n\n// Calling up the function of loading additional images after clicking on the \"LOAD MORE\" button\nloadMoreImgBtn.addEventListener(\"click\", loadMoreImg);\n\n// Function finding new query results taking into account the value given in the input field\nfunction newSearch(e) {\n  e.preventDefault();\n  loadMoreImgBtn.style.display = \"none\"\n  pageNumber = 1;\n  displayedImages = 0;\n  searchingImages();\n  gallery.innerHTML = \"\";\n}\n\n// Definition of the function for loading more new images\nfunction loadMoreImg() {\n  pageNumber += 1;\n  searchingImages();\n}\n\n// Definition of the image search function contained in the backend\nfunction searchingImages() {\n  fetchImages(searchInput.value, pageNumber)\n    .then(images => {\n      renderImages(images);\n    })\n    .catch(error => console.log(error));\n}\n\n// Definition of the images rendering function based on the data taken from the backend\nfunction renderImages({hits, totalHits}) {\n  totalOfHits = totalHits;\n\n  const markups = hits.map(({webformatURL, largeImageURL, tags, likes, views, comments, downloads}) => `\n  <div class=\"gallery__item\">\n    <a class=\"gallery__link\" href=\"${largeImageURL}\"><img class=\"gallery__img\" src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" /></a>\n    <div class=\"gallery__info\">\n      <p class=\"info__item\">\n        <b class=\"info__label\">Likes</b>\n        <span class=\"info__data\">${likes}</span>\n      </p>\n      <p class=\"info__item\">\n        <b class=\"info__label\">Views</b>\n        <span class=\"info__data\">${views}</span>\n      </p>\n      <p class=\"info__item\">\n        <b class=\"info__label\">Comments</b>\n        <span class=\"info__data\">${comments}</span>\n      </p>\n      <p class=\"info__item\">\n        <b class=\"info__label\">Downloads</b>\n        <span class=\"info__data\">${downloads}</span>\n      </p>\n    </div>\n  </div>\n  `)\n  .join(\"\");\n\n  gallery.insertAdjacentHTML(\"beforeend\", markups);\n\n  if (typeof lightbox === \"object\") {\n    lightbox.destroy();\n  }\n\n  lightbox = new SimpleLightbox(\".gallery__item a\");\n\n  displayedImages += hits.length;\n  checkingForImagesLeft();\n\n  if (displayedImages === 0) {\n    Notiflix.Notify.failure(\"Sorry, there are no images matching your search query. Please try again.\");\n  } else if (displayedImages > 0 && displayedImages === totalOfHits) {\n    Notiflix.Notify.info(\"We're sorry, but you've reached the end of search results.\");\n  } else if (displayedImages > 0 && pageNumber === 1) {\n    Notiflix.Notify.success(`Hooray! We found ${totalOfHits} images.`);\n  }\n\n  if (pageNumber > 1) {\n    const { height: cardHeight } = document\n    .querySelector('.gallery .gallery__item').getBoundingClientRect();\n  \n    window.scrollBy({\n      top: cardHeight * 2,\n      behavior: 'smooth',\n    });\n  }\n}\n\n// Definition of the function to hide the \"LOAD MORE\" button when there are no more images to be loaded\nfunction checkingForImagesLeft() {\n  if (totalOfHits === displayedImages) {\n    loadMoreImgBtn.style.display = \"none\";\n  } else {\n    loadMoreImgBtn.style.display = \"block\";\n  }\n}"],"names":["$c3ddedcda2f549ef$var$pageNumber","$c3ddedcda2f549ef$var$displayedImages","$c3ddedcda2f549ef$var$totalOfHits","$c3ddedcda2f549ef$var$lightbox","$c3ddedcda2f549ef$var$qs","selector","document","querySelector","$c3ddedcda2f549ef$var$searchForm","$c3ddedcda2f549ef$var$searchInput","$c3ddedcda2f549ef$var$loadMoreImgBtn","$c3ddedcda2f549ef$var$gallery","$c3ddedcda2f549ef$var$searchingImages","$iwbpK","fetchImages","value","then","images","param1","hits","totalHits","markups","map","param","webformatURL","largeImageURL","tags","likes","views","comments","downloads","concat","join","insertAdjacentHTML","destroy","$parcel$interopDefault","$5IjG7","length","style","display","$iU1Pc","Notify","failure","info","success","cardHeight","getBoundingClientRect","height","window","scrollBy","top","behavior","$c3ddedcda2f549ef$var$renderImages","catch","error","console","log","addEventListener","e","preventDefault","innerHTML"],"version":3,"file":"01-load-more.93023945.js.map"}